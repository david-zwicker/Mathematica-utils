(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     71978,       1538]
NotebookOptionsPosition[     70622,       1509]
NotebookOutlinePosition[     70961,       1524]
CellTagsIndexPosition[     70918,       1521]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"loads", " ", "the", " ", "package"}], " ", "-", " ", 
    RowBox[{"after", " ", "installation"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "Get", "[", "\"\<~/Code/mathematica-utils/ToPython.m\>\"", "]"}]}]], "Input",\

 CellChangeTimes->{{3.70181767476367*^9, 3.701817694205203*^9}, {
  3.7018181976937943`*^9, 3.701818211998588*^9}, {3.817007877025469*^9, 
  3.81700790447239*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"ee6242fe-5738-42d7-927d-12c3be9f45f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ToPython"}]], "Input",
 CellChangeTimes->{{3.70181815383568*^9, 3.7018181578773003`*^9}, 
   3.701818214459565*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"e8858397-83ae-4bb9-9a33-1b677626ef0c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ToPython[expression, numpyprefix] converts \
Mathematica expression to\\n    a Numpy compatible expression. Because Numpy \
can be imported in several ways,\\n    numpystring is a string that will be \
added to appended to function names, e.g.,\\n    Cos->np.cos\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ToPython", "[", 
                    RowBox[{"Private`expression_", ",", 
                    RowBox[{"Private`numpyprefix_", ":", "\<\"np\"\>"}], ",", 
                    
                    RowBox[{"Private`copy_", ":", "True"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "Private`result", ",", "Private`greekrule", ",", 
                    "Private`PythonForm", ",", "Private`np", ",", 
                    "Private`lp", ",", "Private`rp", ",", "Private`a", ",", 
                    "Private`b"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Private`numpyprefix", "\[Equal]", "\<\"\"\>"}], 
                    ",", 
                    RowBox[{"Private`np", "=", "Private`numpyprefix"}], ",", 
                    RowBox[{"Private`np", "=", 
                    RowBox[{"Private`numpyprefix", "<>", "\<\".\"\>"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"Private`lp", "=", "\<\"(\"\>"}], ";", 
                    RowBox[{"Private`rp", "=", "\<\")\"\>"}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    FractionBox["Private`a_", "Private`b_"], "]"}], ":=", 
                    RowBox[{"Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp", "<>", "\<\"/\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`b", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Rational", "[", 
                    RowBox[{"Private`a_", ",", "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], 
                    "<>", "\<\"/\"\>", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`b", "]"}]}]}],
                     ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Complex", "[", 
                    RowBox[{"Private`a_", ",", "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{"\<\"complex\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], 
                    "<>", "\<\", \"\>", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`b", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Private`a_", " ", "Private`b_"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], 
                    "<>", "\<\" * \"\>", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`b", "]"}]}]}],
                     ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Private`a_", "+", "Private`b_"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], 
                    "<>", "\<\" + \"\>", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`b", "]"}]}]}],
                     ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    SuperscriptBox["Private`a_", "Private`b_"], "]"}], ":=", 
                    RowBox[{"Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp", "<>", "\<\"**\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`b", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", "Arg", "]"}], "=", 
                    RowBox[{"Private`np", "<>", "\<\"angle\"\>"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Exp", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{
                    "Private`np", "<>", "\<\"exp\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Csc", "[", "Private`a_", "]"}], "]"}], ":=", 
                    
                    RowBox[{"\<\"1/\"\>", "<>", "Private`np", 
                    "<>", "\<\"sin\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Sec", "[", "Private`a_", "]"}], "]"}], ":=", 
                    
                    RowBox[{"\<\"1/\"\>", "<>", "Private`np", 
                    "<>", "\<\"cos\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Cot", "[", "Private`a_", "]"}], "]"}], ":=", 
                    
                    RowBox[{"\<\"1/\"\>", "<>", "Private`np", 
                    "<>", "\<\"tan\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Csch", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"\<\"1/\"\>", "<>", "Private`np", 
                    "<>", "\<\"sinh\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Sech", "[", "Private`a_", "]"}], "]"}], ":=", 
                    
                    RowBox[{"\<\"1/\"\>", "<>", "Private`np", 
                    "<>", "\<\"cosh\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Coth", "[", "Private`a_", "]"}], "]"}], ":=", 
                    
                    RowBox[{"\<\"1/\"\>", "<>", "Private`np", 
                    "<>", "\<\"tanh\"\>", "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`a", "]"}], "<>",
                     "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"{", "Private`args__", "}"}], "]"}], ":=", 
                    RowBox[{
                    "Private`np", "<>", "\<\"array\"\>", "<>", "Private`lp", 
                    "<>", "\<\"[\"\>", "<>", 
                    RowBox[{"StringRiffle", "[", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "/@", 
                    RowBox[{"{", "Private`args", "}"}]}], ",", "\<\", \"\>"}],
                     "]"}], "<>", "\<\"]\"\>", "<>", "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", "\[Pi]", "]"}], "=", 
                    RowBox[{"Private`np", "<>", "\<\"pi\"\>"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "\[ExponentialE]", "]"}], "=", 
                    
                    RowBox[{"Private`np", "<>", "\<\"e\"\>"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "Private`r_Real", "]"}], ":=", 
                    
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Private`a", "=", 
                    RowBox[{"MantissaExponent", "[", "Private`r", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Private`r", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    "Private`a", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "6"}], "]"}], "]"}], 
                    "<>", "\<\"e\"\>", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    "Private`a", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{"\<\"(\"\>", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    "Private`a", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "6"}], "]"}], "]"}], 
                    "<>", "\<\"e\"\>", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    "Private`a", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "<>", "\<\")\"\>"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"Private`greekrule", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "\<\"alpha\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "\<\"beta\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", "\<\"gamma\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Delta]\"\>", "\[Rule]", "\<\"delta\"\>"}], 
                    ",", 
                    
                    RowBox[{"\<\"\[CurlyEpsilon]\"\>", 
                    "\[Rule]", "\<\"curlyepsilon\"\>"}], ",", 
                    RowBox[{"\<\"\[Zeta]\"\>", "\[Rule]", "\<\"zeta\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "\<\"eta\"\>"}], ",", 
                    RowBox[{"\<\"\[Theta]\"\>", "\[Rule]", "\<\"theta\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Iota]\"\>", "\[Rule]", "\<\"iota\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Kappa]\"\>", "\[Rule]", "\<\"kappa\"\>"}], 
                    ",", 
                    
                    RowBox[{"\<\"\[Lambda]\"\>", 
                    "\[Rule]", "\<\"lambda\"\>"}], ",", 
                    RowBox[{"\<\"\[Mu]\"\>", "\[Rule]", "\<\"mu\"\>"}], ",", 
                    RowBox[{"\<\"\[Nu]\"\>", "\[Rule]", "\<\"nu\"\>"}], ",", 
                    RowBox[{"\<\"\[Xi]\"\>", "\[Rule]", "\<\"xi\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[Omicron]\"\>", 
                    "\[Rule]", "\<\"omicron\"\>"}], ",", 
                    RowBox[{"\<\"\[Pi]\"\>", "\[Rule]", "\<\"pi\"\>"}], ",", 
                    RowBox[{"\<\"\[Rho]\"\>", "\[Rule]", "\<\"rho\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[FinalSigma]\"\>", 
                    "\[Rule]", "\<\"finalsigma\"\>"}], ",", 
                    RowBox[{"\<\"\[Sigma]\"\>", "\[Rule]", "\<\"sigma\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Tau]\"\>", "\[Rule]", "\<\"tau\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[Upsilon]\"\>", 
                    "\[Rule]", "\<\"upsilon\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CurlyPhi]\"\>", 
                    "\[Rule]", "\<\"curlyphi\"\>"}], ",", 
                    RowBox[{"\<\"\[Chi]\"\>", "\[Rule]", "\<\"chi\"\>"}], ",", 
                    RowBox[{"\<\"\[Phi]\"\>", "\[Rule]", "\<\"phi\"\>"}], ",", 
                    RowBox[{"\<\"\[Psi]\"\>", "\[Rule]", "\<\"psi\"\>"}], ",", 
                    RowBox[{"\<\"\[Omega]\"\>", "\[Rule]", "\<\"omega\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[CapitalAlpha]\"\>", 
                    "\[Rule]", "\<\"Alpha\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalBeta]\"\>", 
                    "\[Rule]", "\<\"Beta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalGamma]\"\>", 
                    "\[Rule]", "\<\"Gamma\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalDelta]\"\>", 
                    "\[Rule]", "\<\"Delta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalEpsilon]\"\>", 
                    "\[Rule]", "\<\"CurlyEpsilon\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalZeta]\"\>", 
                    "\[Rule]", "\<\"Zeta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalEta]\"\>", 
                    "\[Rule]", "\<\"Eta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalTheta]\"\>", 
                    "\[Rule]", "\<\"Theta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalIota]\"\>", 
                    "\[Rule]", "\<\"Iota\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalKappa]\"\>", 
                    "\[Rule]", "\<\"Kappa\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalLambda]\"\>", 
                    "\[Rule]", "\<\"Lambda\"\>"}], ",", 
                    RowBox[{"\<\"\[CapitalMu]\"\>", "\[Rule]", "\<\"Mu\"\>"}],
                     ",", 
                    RowBox[{"\<\"\[CapitalNu]\"\>", "\[Rule]", "\<\"Nu\"\>"}],
                     ",", 
                    RowBox[{"\<\"\[CapitalXi]\"\>", "\[Rule]", "\<\"Xi\"\>"}],
                     ",", 
                    
                    RowBox[{"\<\"\[CapitalOmicron]\"\>", 
                    "\[Rule]", "\<\"Omicron\"\>"}], ",", 
                    RowBox[{"\<\"\[CapitalPi]\"\>", "\[Rule]", "\<\"Pi\"\>"}],
                     ",", 
                    
                    RowBox[{"\<\"\[CapitalRho]\"\>", 
                    "\[Rule]", "\<\"Rho\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalSigma]\"\>", 
                    "\[Rule]", "\<\"Sigma\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalTau]\"\>", 
                    "\[Rule]", "\<\"Tau\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalUpsilon]\"\>", 
                    "\[Rule]", "\<\"Upsilon\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalPhi]\"\>", 
                    "\[Rule]", "\<\"CurlyPhi\"\>"}], ",", 
                    RowBox[{"\<\"\[CapitalChi]\"\>", 
                    "\[Rule]", "\<\"Chi\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalPsi]\"\>", 
                    "\[Rule]", "\<\"Psi\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalOmega]\"\>", 
                    "\[Rule]", "\<\"Omega\"\>"}]}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Private`h_", "[", "Private`args__", "]"}], "]"}],
                     ":=", 
                    RowBox[{"Private`np", "<>", 
                    RowBox[{"ToLowerCase", "[", 
                    RowBox[{"Private`PythonForm", "[", "Private`h", "]"}], 
                    "]"}], "<>", "Private`lp", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`args", "]"}], 
                    "<>", "Private`rp"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "Private`a_ListQ", "]"}], ":=", 
                    RowBox[{"Private`np", "<>", "\<\"array\"\>", "<>", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", "Private`a", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"{\"\>", "\[Rule]", "\<\"[\"\>"}], ",", 
                    RowBox[{"\<\"}\"\>", "\[Rule]", "\<\"]\"\>"}]}], "}"}]}], 
                    "]"}]}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "Private`allOther_", "]"}], ":=", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Private`allOther", ",", "FortranForm"}], "]"}], 
                    ",", "Private`greekrule"}], "]"}]}], ";", 
                    RowBox[{"Private`result", "=", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "Private`expression", "]"}], 
                    ",", "Private`greekrule"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Private`copy", ",", 
                    RowBox[{"CopyToClipboard", "[", "Private`result", "]"}]}],
                     "]"}], ";", "Private`result"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ToPython`ToPython\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ToPython[expression, numpyprefix] converts \
Mathematica expression to\\n    a Numpy compatible expression. Because Numpy \
can be imported in several ways,\\n    numpystring is a string that will be \
added to appended to function names, e.g.,\\n    Cos->np.cos\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ToPython[expression, numpyprefix] converts Mathematica expression to\n   \
 a Numpy compatible expression. Because Numpy can be imported in several \
ways,\n    numpystring is a string that will be added to appended to function \
names, e.g.,\n    Cos->np.cos", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ToPython`ToPython, {ToPython`ToPython[
         Pattern[Private`expression, 
          Blank[]], 
         Optional[
          Pattern[Private`numpyprefix, 
           Blank[]], "np"], 
         Optional[
          Pattern[Private`copy, 
           Blank[]], True]] :> 
       Module[{Private`result, Private`greekrule, Private`PythonForm, 
          Private`np, Private`lp, Private`rp, Private`a, Private`b}, 
         If[Private`numpyprefix == "", Private`np = Private`numpyprefix, 
           Private`np = StringJoin[Private`numpyprefix, "."]]; 
         Private`lp = "("; Private`rp = ")"; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]]/Pattern[Private`b, 
             Blank[]]] := StringJoin[Private`lp, 
            Private`PythonForm[Private`a], Private`rp, "/", Private`lp, 
            Private`PythonForm[Private`b], Private`rp]; Private`PythonForm[
            Rational[
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := StringJoin[
            Private`PythonForm[Private`a], "/", 
            Private`PythonForm[Private`b]]; Private`PythonForm[
            Complex[
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := StringJoin["complex", Private`lp, 
            Private`PythonForm[Private`a], ", ", 
            Private`PythonForm[Private`b], Private`rp]; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]] Pattern[Private`b, 
              Blank[]]] := StringJoin[
            Private`PythonForm[Private`a], " * ", 
            Private`PythonForm[Private`b]]; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]] + Pattern[Private`b, 
              Blank[]]] := StringJoin[
            Private`PythonForm[Private`a], " + ", 
            Private`PythonForm[Private`b]]; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]]^Pattern[Private`b, 
              Blank[]]] := StringJoin[Private`lp, 
            Private`PythonForm[Private`a], Private`rp, "**", Private`lp, 
            Private`PythonForm[Private`b], Private`rp]; 
         Private`PythonForm[Arg] = StringJoin[Private`np, "angle"]; 
         Private`PythonForm[
            Exp[
             Pattern[Private`a, 
              Blank[]]]] := StringJoin[Private`np, "exp", Private`lp, 
            Private`PythonForm[Private`a], Private`rp]; Private`PythonForm[
            Csc[
             Pattern[Private`a, 
              Blank[]]]] := StringJoin["1/", Private`np, "sin", Private`lp, 
            Private`PythonForm[Private`a], Private`rp]; Private`PythonForm[
            Sec[
             Pattern[Private`a, 
              Blank[]]]] := StringJoin["1/", Private`np, "cos", Private`lp, 
            Private`PythonForm[Private`a], Private`rp]; Private`PythonForm[
            Cot[
             Pattern[Private`a, 
              Blank[]]]] := StringJoin["1/", Private`np, "tan", Private`lp, 
            Private`PythonForm[Private`a], Private`rp]; Private`PythonForm[
            Csch[
             Pattern[Private`a, 
              Blank[]]]] := StringJoin["1/", Private`np, "sinh", Private`lp, 
            Private`PythonForm[Private`a], Private`rp]; Private`PythonForm[
            Sech[
             Pattern[Private`a, 
              Blank[]]]] := StringJoin["1/", Private`np, "cosh", Private`lp, 
            Private`PythonForm[Private`a], Private`rp]; Private`PythonForm[
            Coth[
             Pattern[Private`a, 
              Blank[]]]] := StringJoin["1/", Private`np, "tanh", Private`lp, 
            Private`PythonForm[Private`a], Private`rp]; Private`PythonForm[{
             Pattern[Private`args, 
              BlankSequence[]]}] := 
          StringJoin[Private`np, "array", Private`lp, "[", 
            StringRiffle[
             Map[Private`PythonForm, {Private`args}], ", "], "]", Private`rp]; 
         Private`PythonForm[Pi] = StringJoin[Private`np, "pi"]; 
         Private`PythonForm[E] = StringJoin[Private`np, "e"]; 
         Private`PythonForm[
            Pattern[Private`r, 
             Blank[Real]]] := Block[{Private`a = MantissaExponent[Private`r]}, 
            If[Private`r >= 0, 
             StringJoin[
              ToString[
               N[
                Part[Private`a, 1], 6]], "e", 
              ToString[
               Part[Private`a, 2]]], 
             StringJoin["(", 
              ToString[
               N[
                Part[Private`a, 1], 6]], "e", 
              ToString[
               Part[Private`a, 2]], ")"]]]; 
         Private`greekrule = {
           "\[Alpha]" -> "alpha", "\[Beta]" -> "beta", "\[Gamma]" -> "gamma", 
            "\[Delta]" -> "delta", "\[CurlyEpsilon]" -> "curlyepsilon", 
            "\[Zeta]" -> "zeta", "\[Eta]" -> "eta", "\[Theta]" -> "theta", 
            "\[Iota]" -> "iota", "\[Kappa]" -> "kappa", "\[Lambda]" -> 
            "lambda", "\[Mu]" -> "mu", "\[Nu]" -> "nu", "\[Xi]" -> "xi", 
            "\[Omicron]" -> "omicron", "\[Pi]" -> "pi", "\[Rho]" -> "rho", 
            "\[FinalSigma]" -> "finalsigma", "\[Sigma]" -> "sigma", "\[Tau]" -> 
            "tau", "\[Upsilon]" -> "upsilon", "\[CurlyPhi]" -> "curlyphi", 
            "\[Chi]" -> "chi", "\[Phi]" -> "phi", "\[Psi]" -> "psi", 
            "\[Omega]" -> "omega", "\[CapitalAlpha]" -> "Alpha", 
            "\[CapitalBeta]" -> "Beta", "\[CapitalGamma]" -> "Gamma", 
            "\[CapitalDelta]" -> "Delta", "\[CapitalEpsilon]" -> 
            "CurlyEpsilon", "\[CapitalZeta]" -> "Zeta", "\[CapitalEta]" -> 
            "Eta", "\[CapitalTheta]" -> "Theta", "\[CapitalIota]" -> "Iota", 
            "\[CapitalKappa]" -> "Kappa", "\[CapitalLambda]" -> "Lambda", 
            "\[CapitalMu]" -> "Mu", "\[CapitalNu]" -> "Nu", "\[CapitalXi]" -> 
            "Xi", "\[CapitalOmicron]" -> "Omicron", "\[CapitalPi]" -> "Pi", 
            "\[CapitalRho]" -> "Rho", "\[CapitalSigma]" -> "Sigma", 
            "\[CapitalTau]" -> "Tau", "\[CapitalUpsilon]" -> "Upsilon", 
            "\[CapitalPhi]" -> "CurlyPhi", "\[CapitalChi]" -> "Chi", 
            "\[CapitalPsi]" -> "Psi", "\[CapitalOmega]" -> "Omega"}; 
         Private`PythonForm[
            Pattern[Private`h, 
             Blank[]][
             Pattern[Private`args, 
              BlankSequence[]]]] := StringJoin[Private`np, 
            ToLowerCase[
             Private`PythonForm[Private`h]], Private`lp, 
            Private`PythonForm[Private`args], Private`rp]; 
         Private`PythonForm[
            Pattern[Private`a, 
             Blank[ListQ]]] := StringJoin[Private`np, "array", 
            StringReplace[
             ToString[Private`a], {"{" -> "[", "}" -> "]"}]]; 
         Private`PythonForm[
            Pattern[Private`allOther, 
             Blank[]]] := StringReplace[
            ToString[Private`allOther, FortranForm], Private`greekrule]; 
         Private`result = StringReplace[
            Private`PythonForm[Private`expression], Private`greekrule]; 
         If[Private`copy, 
           CopyToClipboard[Private`result]]; Private`result]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "ToPython`ToPython"],
    False]]], "Output",
 CellChangeTimes->{{3.817007905862484*^9, 3.817007925407938*^9}, 
   3.817017895451539*^9, 3.817017983655779*^9, 3.817020176181553*^9, 
   3.817020249909437*^9, 3.81702028004818*^9, 3.817020709392556*^9, {
   3.817020843194457*^9, 3.817020860432575*^9}, 3.817020907985509*^9, 
   3.817021002483691*^9, 3.817021045994383*^9, 3.817021162224573*^9, {
   3.817024533909041*^9, 3.8170245802331753`*^9}, {3.817028338801195*^9, 
   3.8170283521293707`*^9}, {3.8170284069379063`*^9, 3.8170284483291693`*^9}, 
   3.8170284877033253`*^9, {3.817029203131109*^9, 3.817029257278965*^9}, 
   3.817041366772246*^9, 3.817041920105034*^9, 3.81704212176096*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"0de1d4c4-c14b-4a3d-a107-9813fa939947"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"session", "=", 
  RowBox[{"StartExternalSession", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<System\>\"", "\[Rule]", "\"\<Python\>\""}], ",", 
     RowBox[{
     "\"\<Executable\>\"", "\[Rule]", 
      "\"\</Users/dzwicker/user/bin/python3\>\""}]}], "|>"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8170413716417522`*^9, 3.81704138383959*^9}, {
  3.817041428715323*^9, 3.8170414489717617`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"7fda57cd-761c-4291-8317-09b6619417d5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[$SessionID === 27644544983451689187, 
                    ExternalSessionObject[
                    "f3a8b182-2483-456b-9172-d877832fe982"][
                    "EvaluationCount"], None], StandardForm], 
                   TrackedSymbols :> {$SessionID, 
                    ExternalEvaluate`Private`$Links}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"f3a8b182-2483-456b-9172-d877832fe982\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "f3a8b182-2483-456b-9172-d877832fe982"]], 
                    ExternalEvaluate`Private`$Links[
                    "f3a8b182-2483-456b-9172-d877832fe982", 
                    "EvaluationCount"], None], StandardForm]], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"f3a8b182-2483-456b-9172-d877832fe982\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"ProcessObject", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"ManagedProcess\"", "\[Rule]", "True"}], ",", 
                    RowBox[{"\"UID\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"PID\"", "\[Rule]", "67329"}], ",", 
                    RowBox[{"\"PPID\"", "\[Rule]", "67273"}], ",", 
                    RowBox[{"\"Program\"", "\[Rule]", "\"python3.7\""}], ",", 
                    
                    
                    RowBox[{
                    "\"Path\"", "\[Rule]", 
                    
                    "\"/opt/local/Library/Frameworks/Python.framework/\
Versions/3.7/bin/python3.7\""}], ",", 
                    RowBox[{"\"User\"", "\[Rule]", "\"dzwicker\""}], ",", 
                    RowBox[{"\"StartTime\"", "\[Rule]", "1608053322"}]}], 
                    "}"}], "]"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Epilog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "\"Epilog\""}], "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Prolog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "\"Prolog\""}], "]"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionEpilog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionProlog: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.7.9\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Executable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/dzwicker/user/bin/python3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ReturnType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Expression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionOptions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"62690\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"0e3d2da8-1701-4cf8-8b9e-b42a5acdacfc\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"62690\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{"IPAddress", "[", "\"::2f00:5856:8630:59e6\"", 
                    "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketObject["0e3d2da8-1701-4cf8-8b9e-b42a5acdacfc"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "f3a8b182-2483-456b-9172-d877832fe982"]], 
                    ExternalEvaluate`Private`$Links[
                    "f3a8b182-2483-456b-9172-d877832fe982", "ProcessMemory"], 
                    None], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "f3a8b182-2483-456b-9172-d877832fe982"]], 
                    ExternalEvaluate`Private`$Links[
                    "f3a8b182-2483-456b-9172-d877832fe982", "ProcessThreads"],
                     None], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    ValueQ[ExternalEvaluate`Private`$Links], 
                    KeyExistsQ[
                    ExternalEvaluate`Private`$Links, 
                    "f3a8b182-2483-456b-9172-d877832fe982"]], 
                    ExternalSessionObject[
                    "f3a8b182-2483-456b-9172-d877832fe982"]["SessionTime"], 
                    None], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["f3a8b182-2483-456b-9172-d877832fe982"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.817041386642043*^9, 3.817041452372534*^9, 
  3.817041923804799*^9, 3.817042122616149*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"d2f46e6e-5459-4573-8c31-ce7597dc5c8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vals", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}], ",", 
    RowBox[{"c", "\[Rule]", "3"}], ",", 
    RowBox[{"d", "\[Rule]", "4"}], ",", 
    RowBox[{"e", "\[Rule]", "5"}], ",", 
    RowBox[{"g", "\[Rule]", "6"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"StringRiffle", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}], ",", "vals"}], 
      "]"}], ",", " ", "\"\<;\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"session", ",", "\"\<import numpy as np\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"session", ",", "init"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8170415720331717`*^9, 3.817041663288992*^9}, {
  3.8170422146371593`*^9, 3.817042243683446*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"be172ae8-6ece-4aaf-9126-d625e8d00a59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}], ",", 
   RowBox[{"e", "\[Rule]", "5"}], ",", 
   RowBox[{"g", "\[Rule]", "6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.817041663948851*^9, 3.8170416662964067`*^9}, 
   3.817041924134535*^9, 3.817042123106804*^9, {3.817042215838212*^9, 
   3.817042243991346*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"7bb694e5-c18e-42d1-9b6b-01d601015bd2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestExpr", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"resM", ",", "resP"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"resM", "=", 
      RowBox[{"N", "[", 
       RowBox[{"expr", "/.", "vals"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"resP", "=", 
      RowBox[{"N", "@", 
       RowBox[{"ExternalEvaluate", "[", 
        RowBox[{"session", ",", 
         RowBox[{"ToPython", "[", 
          RowBox[{"expr", ",", "\"\<np\>\"", ",", "False"}], "]"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"resM", "-", "resP"}], "]"}], ">", "1*^10"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Error: \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"InputForm", "@", "expr"}], "]"}], "<>", "\"\<  \>\"", "<>", 
         RowBox[{"ToString", "[", "resM", "]"}], "<>", " ", "\"\< != \>\"", "<>", 
         RowBox[{"ToString", "[", "resP", "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8170417020811777`*^9, 3.81704172657474*^9}, {
  3.81704179280335*^9, 3.817041840489778*^9}, {3.817041927575897*^9, 
  3.817042036063344*^9}, {3.8170421879989634`*^9, 3.817042226019485*^9}, {
  3.817042299961542*^9, 3.817042425907525*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"1daf2eb3-6166-48ed-992f-1473b56947a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Expression", " ", "examples"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TestExpr", "[", 
    RowBox[{"a", "+", "b"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"a", "*", "b"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"a", "/", "b"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"d", "+", "e", "+", "g"}], ")"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"d", "+", "e", "+", "g"}], ")"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"Exp", "[", 
     RowBox[{"a", "+", "b"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}], "]"}], "/", 
     RowBox[{"Cos", "[", 
      RowBox[{"d", "+", "e"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}], "]"}], "/", 
     RowBox[{"Tanh", "[", 
      RowBox[{"d", "+", "e"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"Log10", "[", "b", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
   3.8170418609071417`*^9, 3.817041872218865*^9}, 3.817042250551552*^9},
 CellLabel->
  "In[334]:=",ExpressionUUID->"740923fd-dd9e-45ca-b781-36fcddb044a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Numeric", " ", "examples"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TestExpr", "[", "2", "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"1", "/", "3"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"1.", "/", "3"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", "2.31", "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"2.31", "+", 
     RowBox[{"5.3", "I"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
  3.817020691587697*^9, 3.817020708510957*^9}, {3.817041939215971*^9, 
  3.817041941599523*^9}, {3.8170421343013906`*^9, 3.817042142368922*^9}, {
  3.8170422708990498`*^9, 3.8170422957666273`*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"5185dd86-dec4-4c26-8e48-124321882ccc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Array", " ", "handling"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TestExpr", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"TestExpr", "[", 
    RowBox[{"Cos", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
  3.817020691587697*^9, 3.817020703952483*^9}, {3.817042042716785*^9, 
  3.817042043976235*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"292185a9-2fb5-4cee-ba04-979e10b4d536"]
},
WindowSize->{808, 701},
WindowMargins->{{316, Automatic}, {149, Automatic}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 537, 13, 52, "Input",ExpressionUUID->"ee6242fe-5738-42d7-927d-12c3be9f45f8"],
Cell[CellGroupData[{
Cell[1120, 37, 227, 5, 30, "Input",ExpressionUUID->"e8858397-83ae-4bb9-9a33-1b677626ef0c"],
Cell[1350, 44, 35323, 735, 167, "Output",ExpressionUUID->"0de1d4c4-c14b-4a3d-a107-9813fa939947"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36710, 784, 517, 13, 73, "Input",ExpressionUUID->"7fda57cd-761c-4291-8317-09b6619417d5"],
Cell[37230, 799, 26368, 517, 62, "Output",ExpressionUUID->"d2f46e6e-5459-4573-8c31-ce7597dc5c8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63635, 1321, 1307, 35, 94, "Input",ExpressionUUID->"be172ae8-6ece-4aaf-9126-d625e8d00a59"],
Cell[64945, 1358, 542, 13, 34, "Output",ExpressionUUID->"7bb694e5-c18e-42d1-9b6b-01d601015bd2"]
}, Open  ]],
Cell[65502, 1374, 1574, 37, 178, "Input",ExpressionUUID->"1daf2eb3-6166-48ed-992f-1473b56947a1"],
Cell[67079, 1413, 1847, 50, 241, "Input",ExpressionUUID->"740923fd-dd9e-45ca-b781-36fcddb044a7"],
Cell[68929, 1465, 887, 19, 136, "Input",ExpressionUUID->"5185dd86-dec4-4c26-8e48-124321882ccc"],
Cell[69819, 1486, 799, 21, 94, "Input",ExpressionUUID->"292185a9-2fb5-4cee-ba04-979e10b4d536"]
}
]
*)

